#!/usr/bin/env python
import numpy as np
from mpmath import fp
from numba import jit
import numpy as np
EulerGamma=np.euler_gamma
@jit(cache=True)
def _PolyLOG(s, z):
    tol = 1e-10
    l = 0
    k = 1
    zk = z
    while 1:
        term = zk / k**s
        l += term
        if abs(term) < tol:
            break
        zk *= z
        k += 1
    return l
@jit(cache=True)
def PolyLOG(s, z):
    #return fp.polylog(s,z)
    #if abs(z) > 0.75:
    #  return -PolyLOG(s,1-z) + np.pi**2/6 - np.log(z)*np.log(1-z)
    if abs(z) >1: 
      return -PolyLOG(s, 1/z) - np.pi**2/6 - 0.5*np.log(-z)**2
    return _PolyLOG(s, z)
@jit(cache=True)
def regular(g=None,gp=None,s=None,t=None,Q=None,s23=None,mu=None,nf=None):
    return 0.333333333333333*Q**2*(-(-0.0625*np.log(s23)/np.pi**5 - 0.0625*np.log((Q**2*s23 + s*t)/((-s + s23)*(s23 - t)))/np.pi**5 + 0.0625*np.log(np.pi)/np.pi**5 + 0.125*np.log(2)/np.pi**5)*(4*Q**4 + 8*Q**2*s - 8*Q**2*s23 + 8*Q**2*t + 8*s**2 - 16*s*s23 + 8*s*t + 16*s23**2 - 16*s23*t + 8*t**2) + 0.0625*(6*Q**4 + 8*Q**2*s + 8*Q**2*t + 8*s**2 + 8*t**2)/np.pi**5 - 0.125*(4*Q**4 + 8*Q**2*s - 8*Q**2*s23 + 8*Q**2*t + 8*s**2 - 16*s*s23 + 8*s*t + 16*s23**2 - 16*s23*t + 8*t**2)*np.log(mu)/np.pi**5 + 0.0625*EulerGamma*(4*Q**4 + 8*Q**2*s - 8*Q**2*s23 + 8*Q**2*t + 8*s**2 - 16*s*s23 + 8*s*t + 16*s23**2 - 16*s23*t + 8*t**2)/np.pi**5)/(s*t*(Q**2 + s)*(Q**2 + t)) + (2*Q**2*s23 - Q**2*t + s*s23)*(-6*(-0.015625*np.log(s23)/np.pi**5 + 0.015625*np.log(np.pi)/np.pi**5 + 0.03125*np.log(2)/np.pi**5)*(8*Q**4 + 8*Q**2*s + 8*Q**2*t + 4*s**2 - 8*s*s23 + 8*s*t + 16*s23**2 - 16*s23*t + 8*t**2) - 0.09375*(-16*Q**4 - 16*Q**2*s - 16*Q**2*t - 6*s**2 - 8*s*t - 8*t**2)/np.pi**5 - 0.1875*(8*Q**4 + 8*Q**2*s + 8*Q**2*t + 4*s**2 - 8*s*s23 + 8*s*t + 16*s23**2 - 16*s23*t + 8*t**2)*np.log(mu)/np.pi**5 + 0.09375*EulerGamma*(8*Q**4 + 8*Q**2*s + 8*Q**2*t + 4*s**2 - 8*s*s23 + 8*s*t + 16*s23**2 - 16*s23*t + 8*t**2)/np.pi**5 - 0.03125*(24*Q**4 + 24*Q**2*s + 24*Q**2*t + 12*s**2 - 24*s*s23 + 24*s*t + 48*s23**2 - 48*s23*t + 24*t**2)*np.log(Q**2*(s23 - t)**2*(Q**2 + s - s23 + t)/(Q**2*(2*s23 - t) + s*s23)**2)/np.pi**5)/(t*(9.0*Q**2 + 9.0*s)*(Q**2*(2*s23 - t) + s*s23)*(2*Q**2 + s + t)) + (-(0.0625*(-Q**2 - s)/np.pi**5 + (-0.03125*np.log(s23)/np.pi**5 + 0.03125*np.log(np.pi)/np.pi**5 + 0.0625*np.log(2)/np.pi**5)*(4*Q**2 + 4*s + 4*s23 - 4*t))*(2*Q**2*s23 - Q**2*t + s*s23) - 0.25*(2*Q**2*s23 - Q**2*t + s*s23)*(Q**2 + s + s23 - t)*np.log(mu)/np.pi**5 + 0.125*EulerGamma*(2*Q**2*s23 - Q**2*t + s*s23)*(Q**2 + s + s23 - t)/np.pi**5 - 0.125*(Q**2 + s + s23 - t)*(2*Q**2*s23 + s*s23 + s*t - s23*t + t**2)/np.pi**5)/(t*(3.0*Q**2 + 3.0*s)*(s23 - t)**2) + 0.00694444444444444*(s - s23)**2*((6*Q**2 + 3*s + 3*t)/np.sqrt(4*Q**2*s23 + (s + t)**2) - (12*s**2 + 12*s*(-s23 + t) + 12*s23*(2*Q**2 + t))/((s - s23)*np.sqrt(4*Q**2*s23 + (s + t)**2)) - (4*Q**2*s23 + (s + t)**2)**(-1.5)*(18*Q**2 + 9*s + 9*t)*(s**2 + s*(-s23 + t) + s23*(2*Q**2 + t))**2/(s - s23)**2 - 12*(Q**2 + s - s23 + t)**2*(6*Q**4*s23**2 + 6*Q**2*s*s23*t + s**4 + 2*s**3*t + s**2*(4*Q**2*s23 + t**2))*np.log((2*Q**2 + s + t - np.sqrt(4*Q**2*s23 + (s + t)**2))/(2*Q**2 + s + t + np.sqrt(4*Q**2*s23 + (s + t)**2)))/((s - s23)**2*(4*Q**2*s23 + (s + t)**2)**2))/(np.pi**5*t*(Q**2 + s)*np.sqrt(4*Q**2*s23 + s**2 + 2*s*t + t**2)) + 0.0833333333333333*(-s23 + t)/(np.pi**5*t*(Q**2 + s)) - 0.00520833333333333*(s23 - t)**2*(-(6 - 2*(2*Q**2 + s + t)**2/(4*Q**2*s23 + (s + t)**2) + 4*(6*Q**4 + Q**2*(6*s - 2*s23 + 6*t) + (s + t)**2)*(2*Q**2*s23 + s*(s23 + t) + t*(-s23 + t))**2/((s23 - t)**2*(4*Q**2*s23 + (s + t)**2)**2) - 2*(8*Q**2 + 4*s + 4*t)*(2*Q**2*s23 + s*(s23 + t) + t*(-s23 + t))/((-s23 + t)*(4*Q**2*s23 + (s + t)**2)))*np.log((2*Q**2 + s + t - np.sqrt(4*Q**2*s23 + (s + t)**2))/(2*Q**2 + s + t + np.sqrt(4*Q**2*s23 + (s + t)**2))) + (8*Q**2 + 4*s + 4*t)/np.sqrt(4*Q**2*s23 + (s + t)**2) - (4*Q**2*s23 + (s + t)**2)**(-1.5)*(24*Q**2 + 12*s + 12*t)*(2*Q**2*s23 + s*(s23 + t) + t*(-s23 + t))**2/(s23 - t)**2 + (32*Q**2*s23 + 16*s*(s23 + t) + 16*t*(-s23 + t))/((-s23 + t)*np.sqrt(4*Q**2*s23 + (s + t)**2)))/(np.pi**5*t*(Q**2 + s)*np.sqrt(4*Q**2*s23 + s**2 + 2*s*t + t**2)) - 0.00347222222222222*(-s + s23)*((24*Q**4*s23 + 12*Q**2*(s**2 + s*(-2*s23 + t) + 2*s23*(s23 + t)) + 12*s23*t*(s + t))*np.log((2*Q**2 + s + t - np.sqrt(4*Q**2*s23 + (s + t)**2))/(2*Q**2 + s + t + np.sqrt(4*Q**2*s23 + (s + t)**2)))/((s - s23)*(4*Q**2*s23 + (s + t)**2)) + (12*s**2 + 12*s*(-s23 + t) + 12*s23*(2*Q**2 + t))/((s - s23)*np.sqrt(4*Q**2*s23 + (s + t)**2)))*(-2*Q**4 + 6*Q**2*s - 12*Q**2*s23 - Q**2*t + 3*s**2 - 4*s*s23 + 3*s*t - 6*s23*t)/(np.pi**5*s*(Q**2 + t)*(2*Q**2 + s + t)*np.sqrt(4*Q**2*s23 + s**2 + 2*s*t + t**2)) - 0.00520833333333333*(s - s23)**2*(-(6 - 2*(2*Q**2 + s + t)**2/(4*Q**2*s23 + (s + t)**2) - 2*(8*Q**2 + 4*s + 4*t)*(s**2 + s*(-s23 + t) + s23*(2*Q**2 + t))/((s - s23)*(4*Q**2*s23 + (s + t)**2)) + 4*(6*Q**4 + Q**2*(6*s - 2*s23 + 6*t) + (s + t)**2)*(s**2 + s*(-s23 + t) + s23*(2*Q**2 + t))**2/((s - s23)**2*(4*Q**2*s23 + (s + t)**2)**2))*np.log((2*Q**2 + s + t - np.sqrt(4*Q**2*s23 + (s + t)**2))/(2*Q**2 + s + t + np.sqrt(4*Q**2*s23 + (s + t)**2))) + (8*Q**2 + 4*s + 4*t)/np.sqrt(4*Q**2*s23 + (s + t)**2) + (16*s**2 + 16*s*(-s23 + t) + 16*s23*(2*Q**2 + t))/((s - s23)*np.sqrt(4*Q**2*s23 + (s + t)**2)) - (4*Q**2*s23 + (s + t)**2)**(-1.5)*(24*Q**2 + 12*s + 12*t)*(s**2 + s*(-s23 + t) + s23*(2*Q**2 + t))**2/(s - s23)**2)/(np.pi**5*s*(Q**2 + t)*np.sqrt(4*Q**2*s23 + s**2 + 2*s*t + t**2)) + 0.0833333333333333*(s - s23)/(np.pi**5*s*(Q**2 + t)) + 0.00694444444444444*(s23 - t)**2*((6*Q**2 + 3*s + 3*t)/np.sqrt(4*Q**2*s23 + (s + t)**2) - (4*Q**2*s23 + (s + t)**2)**(-1.5)*(18*Q**2 + 9*s + 9*t)*(2*Q**2*s23 + s*(s23 + t) + t*(-s23 + t))**2/(s23 - t)**2 - 12*(6*Q**4*s23**2 + 2*Q**2*s23*t*(3*s + 2*t) + t**2*(s + t)**2)*(Q**2 + s - s23 + t)**2*np.log((2*Q**2 + s + t - np.sqrt(4*Q**2*s23 + (s + t)**2))/(2*Q**2 + s + t + np.sqrt(4*Q**2*s23 + (s + t)**2)))/((s23 - t)**2*(4*Q**2*s23 + (s + t)**2)**2) - (24*Q**2*s23 + 12*s*(s23 + t) + 12*t*(-s23 + t))/((-s23 + t)*np.sqrt(4*Q**2*s23 + (s + t)**2)))/(np.pi**5*s*(Q**2 + t)*np.sqrt(4*Q**2*s23 + s**2 + 2*s*t + t**2)) + 0.111111111111111*(Q**2*s - 2*Q**2*s23 - s23*t)*(-6*(-0.015625*np.log(s23)/np.pi**5 + 0.015625*np.log(np.pi)/np.pi**5 + 0.03125*np.log(2)/np.pi**5)*(8*Q**4 + 8*Q**2*s + 8*Q**2*t + 8*s**2 - 16*s*s23 + 8*s*t + 16*s23**2 - 8*s23*t + 4*t**2) - 0.09375*(-16*Q**4 - 16*Q**2*s - 16*Q**2*t - 8*s**2 - 8*s*t - 6*t**2)/np.pi**5 - 0.1875*(8*Q**4 + 8*Q**2*s + 8*Q**2*t + 8*s**2 - 16*s*s23 + 8*s*t + 16*s23**2 - 8*s23*t + 4*t**2)*np.log(mu)/np.pi**5 + 0.09375*EulerGamma*(8*Q**4 + 8*Q**2*s + 8*Q**2*t + 8*s**2 - 16*s*s23 + 8*s*t + 16*s23**2 - 8*s23*t + 4*t**2)/np.pi**5 - 0.03125*(24*Q**4 + 24*Q**2*s + 24*Q**2*t + 24*s**2 - 48*s*s23 + 24*s*t + 48*s23**2 - 24*s23*t + 12*t**2)*np.log(Q**2*(s - s23)**2*(Q**2 + s - s23 + t)/(Q**2*(s - 2*s23) - s23*t)**2)/np.pi**5)/(s*(Q**2 + t)*(Q**2*(s - 2*s23) - s23*t)*(2*Q**2 + s + t)) + 0.333333333333333*((0.0625*(Q**2 + t)/np.pi**5 - (-0.03125*np.log(s23)/np.pi**5 + 0.03125*np.log(np.pi)/np.pi**5 + 0.0625*np.log(2)/np.pi**5)*(4*Q**2 - 4*s + 4*s23 + 4*t))*(-Q**2*s + 2*Q**2*s23 + s23*t) - 0.25*(-Q**2*s + 2*Q**2*s23 + s23*t)*(Q**2 - s + s23 + t)*np.log(mu)/np.pi**5 + 0.125*EulerGamma*(-Q**2*s + 2*Q**2*s23 + s23*t)*(Q**2 - s + s23 + t)/np.pi**5 - 0.125*(Q**2 - s + s23 + t)*(2*Q**2*s23 + s**2 - s*s23 + s*t + s23*t)/np.pi**5)/(s*(Q**2 + t)*(s - s23)**2) + 0.0208333333333333*(20*Q**4*s + 20*Q**4*t + 34*Q**2*s**2 - 48*Q**2*s*s23 + 80*Q**2*s*t - 48*Q**2*s23*t + 34*Q**2*t**2 + 12*s**3 - 24*s**2*s23 + 32*s**2*t - 32*s*s23*t + 32*s*t**2 - 24*s23*t**2 + 12*t**3)*np.log((2*Q**2 + s + t + np.sqrt(4*Q**2*s23 + s**2 + 2*s*t + t**2))/(2*Q**2 + s + t - np.sqrt(4*Q**2*s23 + s**2 + 2*s*t + t**2)))/(np.pi**5*s*t*(2*Q**2 + s + t)*np.sqrt(4*Q**2*s23 + s**2 + 2*s*t + t**2)) + 0.333333333333333*(0.0625*(-4*Q**2 - 4*s)*(Q**2*s23 + s*s23 - s23**2 + s23*t)*np.log(mu)/np.pi**5 - 0.03125*EulerGamma*(-4*Q**2 - 4*s)*(Q**2*s23 + s*s23 - s23**2 + s23*t)/np.pi**5 + 0.03125*(-4*Q**2 - 4*s)*(Q**2*s23 + s*s23 - s23**2 + s23*t)/np.pi**5 + 0.03125*(-4*Q**2 - 4*s)*(-s*s23 + s*t + s23**2 - s23*t)/np.pi**5 - (-(-4*Q**2 - 4*s)*(-0.03125*np.log(s23)/np.pi**5 + 0.03125*np.log(np.pi)/np.pi**5 + 0.0625*np.log(2)/np.pi**5) + 0.03125*(4*Q**2 + 4*s)/np.pi**5 - 0.125*(Q**2 + s + s23 - t)/np.pi**5)*(Q**2*s23 + s*s23 - s23**2 + s23*t))/(s*t*(s23 - t)**2) + 0.333333333333333*(0.0625*(-4*Q**2 - 4*t)*(Q**2*s23 + s*s23 - s23**2 + s23*t)*np.log(mu)/np.pi**5 - 0.03125*EulerGamma*(-4*Q**2 - 4*t)*(Q**2*s23 + s*s23 - s23**2 + s23*t)/np.pi**5 + 0.03125*(-4*Q**2 - 4*t)*(Q**2*s23 + s*s23 - s23**2 + s23*t)/np.pi**5 + 0.03125*(-4*Q**2 - 4*t)*(-s*s23 + s*t + s23**2 - s23*t)/np.pi**5 - (-(-4*Q**2 - 4*t)*(-0.03125*np.log(s23)/np.pi**5 + 0.03125*np.log(np.pi)/np.pi**5 + 0.0625*np.log(2)/np.pi**5) + 0.03125*(4*Q**2 + 4*t)/np.pi**5 - 0.125*(Q**2 - s + s23 + t)/np.pi**5)*(Q**2*s23 + s*s23 - s23**2 + s23*t))/(s*t*(s - s23)**2) + 0.00347222222222222*(s23 - t)*(-(24*Q**4*s23 + 12*Q**2*(s*(2*s23 + t) - 2*s23**2 + 2*s23*t + t**2) + 12*t*(s + t)*(s - s23 + t))*np.log((2*Q**2 + s + t - np.sqrt(4*Q**2*s23 + (s + t)**2))/(2*Q**2 + s + t + np.sqrt(4*Q**2*s23 + (s + t)**2)))/((-s23 + t)*(4*Q**2*s23 + (s + t)**2)) + (-24*Q**2*s23 - 12*s*(s23 + t) - 12*t*(-s23 + t))/((-s23 + t)*np.sqrt(4*Q**2*s23 + (s + t)**2)))*(10*Q**4*t + 12*Q**2*s*t - 12*Q**2*s23*t + 17*Q**2*t**2 + 3*s**2*t - 4*s*s23*t + 9*s*t**2 - 6*s23*t**2 + 6*t**3)/(np.pi**5*s*t*(Q**2 + t)*(2*Q**2 + s + t)*np.sqrt(4*Q**2*s23 + s**2 + 2*s*t + t**2)) + 0.333333333333333*(-(Q**2*s23 + s*t)*(-(-0.03125*np.log(s23)/np.pi**5 + 0.03125*np.log(np.pi)/np.pi**5 + 0.0625*np.log(2)/np.pi**5)*(4*Q**4 + 4*Q**2*s - 4*Q**2*s23 + 12*Q**2*t + 8*t**2) - 0.125*(Q**4 + Q**2*s - Q**2*s23 + 3*Q**2*t + 2*t**2)/np.pi**5 + 0.03125*(4*Q**4 + 2*Q**2*s - 2*Q**2*s23 + 10*Q**2*t + 2*s*t - 2*s23*t + 6*t**2)/np.pi**5) + 0.25*(Q**2*s23 + s*t)*(Q**4 + Q**2*s - Q**2*s23 + 3*Q**2*t + 2*t**2)*np.log(mu)/np.pi**5 - 0.125*EulerGamma*(Q**2*s23 + s*t)*(Q**4 + Q**2*s - Q**2*s23 + 3*Q**2*t + 2*t**2)/np.pi**5 + 0.125*(Q**2*s23 + s*t)*(Q**4 + Q**2*s - Q**2*s23 + 3*Q**2*t + 2*t**2)/np.pi**5 + 0.125*(s*s23 - s*t - s23**2 + s23*t)*(Q**4 + Q**2*s - Q**2*s23 + 3*Q**2*t + 2*t**2)/np.pi**5)/(s*t*(Q**2 + t)*(s - s23)**2) + 0.00347222222222222*(-s + s23)*(-(24*Q**4*s23 + 12*Q**2*(s**2 + s*(2*s23 + t) + 2*s23*(-s23 + t)) + 12*s*(s + t)*(s - s23 + t))*np.log((2*Q**2 + s + t - np.sqrt(4*Q**2*s23 + (s + t)**2))/(2*Q**2 + s + t + np.sqrt(4*Q**2*s23 + (s + t)**2)))/((s - s23)*(4*Q**2*s23 + (s + t)**2)) + (-12*s**2 - 12*s*(-s23 + t) - 12*s23*(2*Q**2 + t))/((s - s23)*np.sqrt(4*Q**2*s23 + (s + t)**2)))*(10*Q**4*s + 17*Q**2*s**2 - 12*Q**2*s*s23 + 12*Q**2*s*t + 6*s**3 - 6*s**2*s23 + 9*s**2*t - 4*s*s23*t + 3*s*t**2)/(np.pi**5*s*t*(Q**2 + s)*(2*Q**2 + s + t)*np.sqrt(4*Q**2*s23 + s**2 + 2*s*t + t**2)) + 0.00347222222222222*(s23 - t)*((24*Q**4*s23 + 12*Q**2*(s*(2*s23 + t) + 2*s23**2 - 2*s23*t + t**2) + 12*s*s23*(s + t))*np.log((2*Q**2 + s + t - np.sqrt(4*Q**2*s23 + (s + t)**2))/(2*Q**2 + s + t + np.sqrt(4*Q**2*s23 + (s + t)**2)))/((-s23 + t)*(4*Q**2*s23 + (s + t)**2)) + (24*Q**2*s23 + 12*s*(s23 + t) + 12*t*(-s23 + t))/((-s23 + t)*np.sqrt(4*Q**2*s23 + (s + t)**2)))*(2*Q**4*s + Q**2*s**2 + 12*Q**2*s*s23 - 6*Q**2*s*t + 6*s**2*s23 - 3*s**2*t + 4*s*s23*t - 3*s*t**2)/(np.pi**5*s*t*(Q**2 + s)*(2*Q**2 + s + t)*np.sqrt(4*Q**2*s23 + s**2 + 2*s*t + t**2)) + 0.333333333333333*(-(Q**2*s23 + s*t)*(-(-0.03125*np.log(s23)/np.pi**5 + 0.03125*np.log(np.pi)/np.pi**5 + 0.0625*np.log(2)/np.pi**5)*(4*Q**4 + 12*Q**2*s - 4*Q**2*s23 + 4*Q**2*t + 8*s**2) + 0.125*(-Q**4 - 3*Q**2*s + Q**2*s23 - Q**2*t - 2*s**2)/np.pi**5 - 0.03125*(-4*Q**4 - 10*Q**2*s + 2*Q**2*s23 - 2*Q**2*t - 6*s**2 + 2*s*s23 - 2*s*t)/np.pi**5) + 0.25*(Q**2*s23 + s*t)*(Q**4 + 3*Q**2*s - Q**2*s23 + Q**2*t + 2*s**2)*np.log(mu)/np.pi**5 - 0.125*EulerGamma*(Q**2*s23 + s*t)*(Q**4 + 3*Q**2*s - Q**2*s23 + Q**2*t + 2*s**2)/np.pi**5 + 0.125*(Q**2*s23 + s*t)*(Q**4 + 3*Q**2*s - Q**2*s23 + Q**2*t + 2*s**2)/np.pi**5 + 0.125*(s*s23 - s*t - s23**2 + s23*t)*(Q**4 + 3*Q**2*s - Q**2*s23 + Q**2*t + 2*s**2)/np.pi**5)/(s*t*(Q**2 + s)*(s23 - t)**2) - 0.0416666666666667*(2*Q**2 + s + t)*(Q**2*s + Q**2*t + 2*s*t)/(np.pi**5*s*t*(Q**2 + s)*(Q**2 + t)) + 0.333333333333333*((-0.03125*np.log(s23)/np.pi**5 + 0.03125*np.log(np.pi)/np.pi**5 + 0.0625*np.log(2)/np.pi**5)*(8*Q**2*s*t - 4*Q**2*s23*t + 4*Q**2*t**2 + 8*s**2*t - 4*s*s23*t + 4*s*t**2 + 8*s23**2*t - 12*s23*t**2 + 4*t**3) + 0.03125*(-6*Q**2*s*t - 2*Q**2*t**2 - 6*s**2*t + 2*s*s23*t - 4*s*t**2 + 4*s23**2*t - 6*s23*t**2 + 2*t**3)/np.pi**5 + 0.25*(2*Q**2*s*t - Q**2*s23*t + Q**2*t**2 + 2*s**2*t - s*s23*t + s*t**2 + 2*s23**2*t - 3*s23*t**2 + t**3)*np.log(mu)/np.pi**5 - 0.125*EulerGamma*(2*Q**2*s*t - Q**2*s23*t + Q**2*t**2 + 2*s**2*t - s*s23*t + s*t**2 + 2*s23**2*t - 3*s23*t**2 + t**3)/np.pi**5)/(s*t**2*(s23 - t)) + 0.111111111111111*(6*(-0.015625*np.log(s23)/np.pi**5 + 0.015625*np.log(np.pi)/np.pi**5 + 0.03125*np.log(2)/np.pi**5)*(16*Q**8*t + 48*Q**6*s*t - 48*Q**6*s23*t + 56*Q**6*t**2 + 48*Q**4*s**2*t - 96*Q**4*s*s23*t + 120*Q**4*s*t**2 + 64*Q**4*s23**2*t - 136*Q**4*s23*t**2 + 80*Q**4*t**3 + 16*Q**2*s**3*t - 48*Q**2*s**2*s23*t + 72*Q**2*s**2*t**2 + 64*Q**2*s*s23**2*t - 160*Q**2*s*s23*t**2 + 104*Q**2*s*t**3 - 32*Q**2*s23**3*t + 112*Q**2*s23**2*t**2 - 128*Q**2*s23*t**3 + 52*Q**2*t**4 + 8*s**3*t**2 - 24*s**2*s23*t**2 + 24*s**2*t**3 + 32*s*s23**2*t**2 - 56*s*s23*t**3 + 28*s*t**4 - 16*s23**3*t**2 + 40*s23**2*t**3 - 36*s23*t**4 + 12*t**5) + 0.09375*(-16*Q**8*t - 48*Q**6*s*t + 16*Q**6*s23*t - 40*Q**6*t**2 - 48*Q**4*s**2*t + 32*Q**4*s*s23*t - 88*Q**4*s*t**2 + 24*Q**4*s23*t**2 - 44*Q**4*t**3 - 16*Q**2*s**3*t + 16*Q**2*s**2*s23*t - 56*Q**2*s**2*t**2 + 32*Q**2*s*s23*t**2 - 60*Q**2*s*t**3 + 20*Q**2*s23*t**3 - 26*Q**2*t**4 - 8*s**3*t**2 + 8*s**2*s23*t**2 - 16*s**2*t**3 + 8*s*s23*t**3 - 14*s*t**4 + 6*s23*t**4 - 6*t**5)/np.pi**5 + 0.1875*(16*Q**8*t + 48*Q**6*s*t - 48*Q**6*s23*t + 56*Q**6*t**2 + 48*Q**4*s**2*t - 96*Q**4*s*s23*t + 120*Q**4*s*t**2 + 64*Q**4*s23**2*t - 136*Q**4*s23*t**2 + 80*Q**4*t**3 + 16*Q**2*s**3*t - 48*Q**2*s**2*s23*t + 72*Q**2*s**2*t**2 + 64*Q**2*s*s23**2*t - 160*Q**2*s*s23*t**2 + 104*Q**2*s*t**3 - 32*Q**2*s23**3*t + 112*Q**2*s23**2*t**2 - 128*Q**2*s23*t**3 + 52*Q**2*t**4 + 8*s**3*t**2 - 24*s**2*s23*t**2 + 24*s**2*t**3 + 32*s*s23**2*t**2 - 56*s*s23*t**3 + 28*s*t**4 - 16*s23**3*t**2 + 40*s23**2*t**3 - 36*s23*t**4 + 12*t**5)*np.log(mu)/np.pi**5 - 0.09375*EulerGamma*(16*Q**8*t + 48*Q**6*s*t - 48*Q**6*s23*t + 56*Q**6*t**2 + 48*Q**4*s**2*t - 96*Q**4*s*s23*t + 120*Q**4*s*t**2 + 64*Q**4*s23**2*t - 136*Q**4*s23*t**2 + 80*Q**4*t**3 + 16*Q**2*s**3*t - 48*Q**2*s**2*s23*t + 72*Q**2*s**2*t**2 + 64*Q**2*s*s23**2*t - 160*Q**2*s*s23*t**2 + 104*Q**2*s*t**3 - 32*Q**2*s23**3*t + 112*Q**2*s23**2*t**2 - 128*Q**2*s23*t**3 + 52*Q**2*t**4 + 8*s**3*t**2 - 24*s**2*s23*t**2 + 24*s**2*t**3 + 32*s*s23**2*t**2 - 56*s*s23*t**3 + 28*s*t**4 - 16*s23**3*t**2 + 40*s23**2*t**3 - 36*s23*t**4 + 12*t**5)/np.pi**5 + 0.03125*(48*Q**8*t + 144*Q**6*s*t - 144*Q**6*s23*t + 168*Q**6*t**2 + 144*Q**4*s**2*t - 288*Q**4*s*s23*t + 360*Q**4*s*t**2 + 192*Q**4*s23**2*t - 408*Q**4*s23*t**2 + 240*Q**4*t**3 + 48*Q**2*s**3*t - 144*Q**2*s**2*s23*t + 216*Q**2*s**2*t**2 + 192*Q**2*s*s23**2*t - 480*Q**2*s*s23*t**2 + 312*Q**2*s*t**3 - 96*Q**2*s23**3*t + 336*Q**2*s23**2*t**2 - 384*Q**2*s23*t**3 + 156*Q**2*t**4 + 24*s**3*t**2 - 72*s**2*s23*t**2 + 72*s**2*t**3 + 96*s*s23**2*t**2 - 168*s*s23*t**3 + 84*s*t**4 - 48*s23**3*t**2 + 120*s23**2*t**3 - 108*s23*t**4 + 36*t**5)*np.log(Q**2*(s23 - t)**2/(t**2*(Q**2 + s - s23 + t)))/np.pi**5)/(s*t**2*(Q**2 + t)*(2*Q**2 + s + t)*(Q**2 + s - s23 + t)) + 0.333333333333333*(-(-0.03125*np.log(s23)/np.pi**5 + 0.03125*np.log(np.pi)/np.pi**5 + 0.0625*np.log(2)/np.pi**5)*(4*Q**2*s**2 - 4*Q**2*s*s23 + 8*Q**2*s*t + 4*s**3 - 12*s**2*s23 + 4*s**2*t + 8*s*s23**2 - 4*s*s23*t + 8*s*t**2) + 0.03125*(2*Q**2*s**2 + 6*Q**2*s*t - 2*s**3 + 6*s**2*s23 + 4*s**2*t - 4*s*s23**2 - 2*s*s23*t + 6*s*t**2)/np.pi**5 - 0.25*(Q**2*s**2 - Q**2*s*s23 + 2*Q**2*s*t + s**3 - 3*s**2*s23 + s**2*t + 2*s*s23**2 - s*s23*t + 2*s*t**2)*np.log(mu)/np.pi**5 + 0.125*EulerGamma*(Q**2*s**2 - Q**2*s*s23 + 2*Q**2*s*t + s**3 - 3*s**2*s23 + s**2*t + 2*s*s23**2 - s*s23*t + 2*s*t**2)/np.pi**5)/(s**2*t*(s - s23)) + 0.111111111111111*(6*(-0.015625*np.log(s23)/np.pi**5 + 0.015625*np.log(np.pi)/np.pi**5 + 0.03125*np.log(2)/np.pi**5)*(16*Q**8*s + 56*Q**6*s**2 - 48*Q**6*s*s23 + 48*Q**6*s*t + 80*Q**4*s**3 - 136*Q**4*s**2*s23 + 120*Q**4*s**2*t + 64*Q**4*s*s23**2 - 96*Q**4*s*s23*t + 48*Q**4*s*t**2 + 52*Q**2*s**4 - 128*Q**2*s**3*s23 + 104*Q**2*s**3*t + 112*Q**2*s**2*s23**2 - 160*Q**2*s**2*s23*t + 72*Q**2*s**2*t**2 - 32*Q**2*s*s23**3 + 64*Q**2*s*s23**2*t - 48*Q**2*s*s23*t**2 + 16*Q**2*s*t**3 + 12*s**5 - 36*s**4*s23 + 28*s**4*t + 40*s**3*s23**2 - 56*s**3*s23*t + 24*s**3*t**2 - 16*s**2*s23**3 + 32*s**2*s23**2*t - 24*s**2*s23*t**2 + 8*s**2*t**3) + 0.09375*(-16*Q**8*s - 40*Q**6*s**2 + 16*Q**6*s*s23 - 48*Q**6*s*t - 44*Q**4*s**3 + 24*Q**4*s**2*s23 - 88*Q**4*s**2*t + 32*Q**4*s*s23*t - 48*Q**4*s*t**2 - 26*Q**2*s**4 + 20*Q**2*s**3*s23 - 60*Q**2*s**3*t + 32*Q**2*s**2*s23*t - 56*Q**2*s**2*t**2 + 16*Q**2*s*s23*t**2 - 16*Q**2*s*t**3 - 6*s**5 + 6*s**4*s23 - 14*s**4*t + 8*s**3*s23*t - 16*s**3*t**2 + 8*s**2*s23*t**2 - 8*s**2*t**3)/np.pi**5 + 0.1875*(16*Q**8*s + 56*Q**6*s**2 - 48*Q**6*s*s23 + 48*Q**6*s*t + 80*Q**4*s**3 - 136*Q**4*s**2*s23 + 120*Q**4*s**2*t + 64*Q**4*s*s23**2 - 96*Q**4*s*s23*t + 48*Q**4*s*t**2 + 52*Q**2*s**4 - 128*Q**2*s**3*s23 + 104*Q**2*s**3*t + 112*Q**2*s**2*s23**2 - 160*Q**2*s**2*s23*t + 72*Q**2*s**2*t**2 - 32*Q**2*s*s23**3 + 64*Q**2*s*s23**2*t - 48*Q**2*s*s23*t**2 + 16*Q**2*s*t**3 + 12*s**5 - 36*s**4*s23 + 28*s**4*t + 40*s**3*s23**2 - 56*s**3*s23*t + 24*s**3*t**2 - 16*s**2*s23**3 + 32*s**2*s23**2*t - 24*s**2*s23*t**2 + 8*s**2*t**3)*np.log(mu)/np.pi**5 - 0.09375*EulerGamma*(16*Q**8*s + 56*Q**6*s**2 - 48*Q**6*s*s23 + 48*Q**6*s*t + 80*Q**4*s**3 - 136*Q**4*s**2*s23 + 120*Q**4*s**2*t + 64*Q**4*s*s23**2 - 96*Q**4*s*s23*t + 48*Q**4*s*t**2 + 52*Q**2*s**4 - 128*Q**2*s**3*s23 + 104*Q**2*s**3*t + 112*Q**2*s**2*s23**2 - 160*Q**2*s**2*s23*t + 72*Q**2*s**2*t**2 - 32*Q**2*s*s23**3 + 64*Q**2*s*s23**2*t - 48*Q**2*s*s23*t**2 + 16*Q**2*s*t**3 + 12*s**5 - 36*s**4*s23 + 28*s**4*t + 40*s**3*s23**2 - 56*s**3*s23*t + 24*s**3*t**2 - 16*s**2*s23**3 + 32*s**2*s23**2*t - 24*s**2*s23*t**2 + 8*s**2*t**3)/np.pi**5 + 0.03125*(48*Q**8*s + 168*Q**6*s**2 - 144*Q**6*s*s23 + 144*Q**6*s*t + 240*Q**4*s**3 - 408*Q**4*s**2*s23 + 360*Q**4*s**2*t + 192*Q**4*s*s23**2 - 288*Q**4*s*s23*t + 144*Q**4*s*t**2 + 156*Q**2*s**4 - 384*Q**2*s**3*s23 + 312*Q**2*s**3*t + 336*Q**2*s**2*s23**2 - 480*Q**2*s**2*s23*t + 216*Q**2*s**2*t**2 - 96*Q**2*s*s23**3 + 192*Q**2*s*s23**2*t - 144*Q**2*s*s23*t**2 + 48*Q**2*s*t**3 + 36*s**5 - 108*s**4*s23 + 84*s**4*t + 120*s**3*s23**2 - 168*s**3*s23*t + 72*s**3*t**2 - 48*s**2*s23**3 + 96*s**2*s23**2*t - 72*s**2*s23*t**2 + 24*s**2*t**3)*np.log(Q**2*(s - s23)**2/(s**2*(Q**2 + s - s23 + t)))/np.pi**5)/(s**2*t*(Q**2 + s)*(2*Q**2 + s + t)*(Q**2 + s - s23 + t)) + 0.0416666666666667*(2*Q**6*s*t + 3*Q**4*s**2*t + 3*Q**4*s*t**2 + 7*Q**2*s**2*s23*t - 5*Q**2*s**2*t**2 + 7*Q**2*s*s23*t**2 - 4*s**3*t**2 + 12*s**2*s23*t**2 - 4*s**2*t**3)/(np.pi**5*s**2*t**2*(Q**2 + s)*(Q**2 + t))
@jit(cache=True)
def delta(g=None,gp=None,s=None,t=None,Q=None,s23=None,mu=None,B=None,nf=None):
    return 0
@jit(cache=True)
def plus1B(g=None,gp=None,s=None,t=None,Q=None,s23=None,mu=None,B=None,nf=None):
    return 0
@jit(cache=True)
def plus2B(g=None,gp=None,s=None,t=None,Q=None,s23=None,mu=None,B=None,nf=None):
    return 0
