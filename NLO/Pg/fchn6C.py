#!/usr/bin/env python
import numpy as np
from mpmath import fp
from numba import jit
import numpy as np
EulerGamma=np.euler_gamma
@jit(cache=True)
def _PolyLOG(s, z):
    tol = 1e-10
    l = 0
    k = 1
    zk = z
    while 1:
        term = zk / k**s
        l += term
        if abs(term) < tol:
            break
        zk *= z
        k += 1
    return l
@jit(cache=True)
def PolyLOG(s, z):
    #return fp.polylog(s,z)
    #if abs(z) > 0.75:
    #  return -PolyLOG(s,1-z) + np.pi**2/6 - np.log(z)*np.log(1-z)
    if abs(z) >1: 
      return -PolyLOG(s, 1/z) - np.pi**2/6 - 0.5*np.log(-z)**2
    return _PolyLOG(s, z)
@jit(cache=True)
def regular(g=None,gp=None,s=None,t=None,Q=None,s23=None,mu=None,nf=None):
    return 0.333333333333333*Q**2*(-(np.log(mu)/np.pi**5 - 0.5*np.log(s23)/np.pi**5 - 0.5/np.pi**5 - 0.5*EulerGamma/np.pi**5 + 0.5*np.log(np.pi)/np.pi**5 + np.log(2)/np.pi**5)*(2*Q**2*s23**2 - 2*Q**2*s23*t + s*s23*t - s*t**2 + s23*t**2 - t**3) - 0.5*(4*Q**2*s23**2 - 2*Q**2*t**2 + 4*s*s23*t - 2*s*t**2 + 2*s23*t**2 - 2*t**3 + (s23 - t)*(2*Q**2*s23 + t*(s + t))*np.log(Q**2*(s23 - t)**2/(t**2*(Q**2 + s - s23 + t))))/np.pi**5)/(t**4*(Q**2 + s - s23 + t)) + 0.0416666666666667/(np.pi**5*(Q**2 + s - s23 + t)) + 0.333333333333333*((-0.125*np.log(s23)/np.pi**5 - 0.25/np.pi**5 + 0.125*np.log(np.pi)/np.pi**5 + 0.25*np.log(2)/np.pi**5)*(Q**2*t + s*t - s23*t + t**2) + 0.25*(Q**2*t + s*t - s23*t + t**2)*np.log(mu)/np.pi**5 - 0.125*EulerGamma*(Q**2*t + s*t - s23*t + t**2)/np.pi**5 + 0.125*(2*Q**2*s23 + s*s23 + s*t - s23*t + t**2)/np.pi**5)/(t*(s23 - t)**2) + 0.333333333333333*(-(0.125*(-Q**2 - s)/np.pi**5 + (-0.0625*np.log(s23)/np.pi**5 + 0.0625*np.log(np.pi)/np.pi**5 + 0.125*np.log(2)/np.pi**5)*(2*Q**2 + 2*s - 2*s23 + 2*t))*(4*Q**2*s23 + 2*s*s23 + 2*s*t - 2*s23*t + 2*t**2) + 0.5*(Q**2 + s - s23 + t)*(Q**2*t + s*t - s23*t + t**2)/np.pi**5 - 0.5*(Q**2 + s - s23 + t)*(2*Q**2*s23 + s*s23 + s*t - s23*t + t**2)*np.log(mu)/np.pi**5 + 0.25*EulerGamma*(Q**2 + s - s23 + t)*(2*Q**2*s23 + s*s23 + s*t - s23*t + t**2)/np.pi**5)/(t*(s23 - t)**3) + 0.333333333333333*(-(0.25*(Q**2 + s)/np.pi**5 - (-0.125*np.log(s23)/np.pi**5 + 0.125*np.log(np.pi)/np.pi**5 + 0.25*np.log(2)/np.pi**5)*(2*Q**2 + 2*s - 2*s23 + 2*t) - 0.25*(Q**2 + s - s23 + t)/np.pi**5)*(2*Q**2*s23 + s*s23 + s*t - s23**2 + s23*t) + 0.25*(Q**2 + s - s23 + t)*(-s*s23 + s*t + s23**2 - s23*t)/np.pi**5 + 0.5*(Q**2 + s - s23 + t)*(2*Q**2*s23 + s*s23 + s*t - s23**2 + s23*t)*np.log(mu)/np.pi**5 - 0.5*(Q**2 + s - s23 + t)*(2*Q**2*s23 + s*s23 + s*t - s23**2 + s23*t)/np.pi**5 - 0.25*EulerGamma*(Q**2 + s - s23 + t)*(2*Q**2*s23 + s*s23 + s*t - s23**2 + s23*t)/np.pi**5)/(t*(s23 - t)**3) + 0.166666666666667*(Q**4*t + 2*Q**2*s*t - Q**2*s23**2 + Q**2*t**2 + s**2*t - 2*s*s23*t + 2*s*t**2 + s23**2*t - 2*s23*t**2 + t**3)/(np.pi**5*t**2*(s23 - t)**2) + 0.333333333333333*(-(-6*Q**4*s23**2 + 4*Q**4*s23*t + 2*Q**2*t*(-2*s*s23 + s*t - s23*t + t**2))*(0.5*np.log(mu)/np.pi**5 - 0.25*np.log(s23)/np.pi**5 - 0.25/np.pi**5 - 0.25*EulerGamma/np.pi**5 + 0.25*np.log(np.pi)/np.pi**5 + 0.5*np.log(2)/np.pi**5) - 0.25*(-16*Q**4*s23**2 + 2*Q**4*t**2 + 2*Q**2*t*(-8*s*s23 + s*t - 3*s23*t + t**2) + 2*Q**2*(Q**2*s23*(3*s23 - 2*t) - t*(s*(-2*s23 + t) + t*(-s23 + t)))*np.log(t**2*(Q**2 + s - s23 + t)/(Q**2*(s23 - t)**2)) - t**2*(s + t)**2)/np.pi**5)/(t**4*(Q**2 + s - s23 + t)) + 0.0416666666666667*(t**2*(Q**2 + s)**2/(s23 - t)**2 + (-np.log(4*np.pi) + EulerGamma)*(Q**4 + 2*Q**2*t + 2*t**2 - 2*t*(Q**2*s23 + s*t)/(s23 - t) + (Q**2*s23 + s*t)**2/(s23 - t)**2))*(2*s23**2 - 2*s23*t + t**2)/(np.pi**5*t**4*(Q**2 + s - s23 + t)) + 0.0208333333333333*(16*Q**4*s + 16*Q**2*s**2 - 16*Q**2*s*s23 + 24*Q**2*s*t + 4*s**3 - 8*s**2*s23 + 12*s**2*t - 8*s*s23*t + 8*s*t**2)*np.log((2*Q**2 + s + t + np.sqrt(4*Q**2*s23 + s**2 + 2*s*t + t**2))/(2*Q**2 + s + t - np.sqrt(4*Q**2*s23 + s**2 + 2*s*t + t**2)))/(np.pi**5*s*t*(2*Q**2 + s + t)*np.sqrt(4*Q**2*s23 + s**2 + 2*s*t + t**2)) + 0.00347222222222222*(s23 - t)*(-(24*Q**4*s23 + 12*Q**2*(s*(2*s23 + t) - 2*s23**2 + 2*s23*t + t**2) + 12*t*(s + t)*(s - s23 + t))*np.log((2*Q**2 + s + t - np.sqrt(4*Q**2*s23 + (s + t)**2))/(2*Q**2 + s + t + np.sqrt(4*Q**2*s23 + (s + t)**2)))/((-s23 + t)*(4*Q**2*s23 + (s + t)**2)) + (-24*Q**2*s23 - 12*s*(s23 + t) - 12*t*(-s23 + t))/((-s23 + t)*np.sqrt(4*Q**2*s23 + (s + t)**2)))*(4*Q**4*s + 2*Q**2*s**2 + 6*Q**2*s*t + 2*s**2*t + 2*s*t**2)/(np.pi**5*s*t*(Q**2 + t)*(2*Q**2 + s + t)*np.sqrt(4*Q**2*s23 + s**2 + 2*s*t + t**2)) + 0.333333333333333*((-0.03125*np.log(s23)/np.pi**5 + 0.03125*np.log(np.pi)/np.pi**5 + 0.0625*np.log(2)/np.pi**5)*(8*Q**2*s*s23 + 16*Q**2*s*t + 16*s**2*t - 16*s*s23*t + 16*s*t**2) - 0.03125*(8*Q**2*s*s23 + 16*Q**2*s*t + 16*s**2*t + 8*s*t**2)/np.pi**5 + 0.25*(2*Q**2*s*s23 + 4*Q**2*s*t + 4*s**2*t - 4*s*s23*t + 4*s*t**2)*np.log(mu)/np.pi**5 - 0.125*EulerGamma*(2*Q**2*s*s23 + 4*Q**2*s*t + 4*s**2*t - 4*s*s23*t + 4*s*t**2)/np.pi**5)/(s*t**2*(s23 - t)) + 0.111111111111111*(6*(-0.015625*np.log(s23)/np.pi**5 + 0.015625*np.log(np.pi)/np.pi**5 + 0.03125*np.log(2)/np.pi**5)*(16*Q**8*s + 24*Q**6*s**2 + 40*Q**6*s*t + 24*Q**4*s**3 - 32*Q**4*s**2*s23 + 72*Q**4*s**2*t + 32*Q**4*s*s23**2 - 48*Q**4*s*s23*t + 56*Q**4*s*t**2 + 8*Q**2*s**4 - 16*Q**2*s**3*s23 + 48*Q**2*s**3*t + 16*Q**2*s**2*s23**2 - 72*Q**2*s**2*s23*t + 76*Q**2*s**2*t**2 + 48*Q**2*s*s23**2*t - 72*Q**2*s*s23*t**2 + 44*Q**2*s*t**3 + 8*s**4*t - 16*s**3*s23*t + 24*s**3*t**2 + 16*s**2*s23**2*t - 40*s**2*s23*t**2 + 28*s**2*t**3 + 16*s*s23**2*t**2 - 24*s*s23*t**3 + 12*s*t**4) + 0.09375*(-16*Q**8*s - 24*Q**6*s**2 - 32*Q**6*s*s23 - 24*Q**6*s*t - 24*Q**4*s**3 - 16*Q**4*s**2*s23 - 48*Q**4*s**2*t - 48*Q**4*s*s23*t - 24*Q**4*s*t**2 - 8*Q**2*s**4 - 40*Q**2*s**3*t - 16*Q**2*s**2*s23*t - 40*Q**2*s**2*t**2 - 16*Q**2*s*s23*t**2 - 24*Q**2*s*t**3 - 8*s**4*t - 16*s**3*t**2 - 16*s**2*t**3 - 8*s*t**4)/np.pi**5 + 0.1875*(16*Q**8*s + 24*Q**6*s**2 + 40*Q**6*s*t + 24*Q**4*s**3 - 32*Q**4*s**2*s23 + 72*Q**4*s**2*t + 32*Q**4*s*s23**2 - 48*Q**4*s*s23*t + 56*Q**4*s*t**2 + 8*Q**2*s**4 - 16*Q**2*s**3*s23 + 48*Q**2*s**3*t + 16*Q**2*s**2*s23**2 - 72*Q**2*s**2*s23*t + 76*Q**2*s**2*t**2 + 48*Q**2*s*s23**2*t - 72*Q**2*s*s23*t**2 + 44*Q**2*s*t**3 + 8*s**4*t - 16*s**3*s23*t + 24*s**3*t**2 + 16*s**2*s23**2*t - 40*s**2*s23*t**2 + 28*s**2*t**3 + 16*s*s23**2*t**2 - 24*s*s23*t**3 + 12*s*t**4)*np.log(mu)/np.pi**5 - 0.09375*EulerGamma*(16*Q**8*s + 24*Q**6*s**2 + 40*Q**6*s*t + 24*Q**4*s**3 - 32*Q**4*s**2*s23 + 72*Q**4*s**2*t + 32*Q**4*s*s23**2 - 48*Q**4*s*s23*t + 56*Q**4*s*t**2 + 8*Q**2*s**4 - 16*Q**2*s**3*s23 + 48*Q**2*s**3*t + 16*Q**2*s**2*s23**2 - 72*Q**2*s**2*s23*t + 76*Q**2*s**2*t**2 + 48*Q**2*s*s23**2*t - 72*Q**2*s*s23*t**2 + 44*Q**2*s*t**3 + 8*s**4*t - 16*s**3*s23*t + 24*s**3*t**2 + 16*s**2*s23**2*t - 40*s**2*s23*t**2 + 28*s**2*t**3 + 16*s*s23**2*t**2 - 24*s*s23*t**3 + 12*s*t**4)/np.pi**5 + 0.03125*(48*Q**8*s + 72*Q**6*s**2 + 120*Q**6*s*t + 72*Q**4*s**3 - 96*Q**4*s**2*s23 + 216*Q**4*s**2*t + 96*Q**4*s*s23**2 - 144*Q**4*s*s23*t + 168*Q**4*s*t**2 + 24*Q**2*s**4 - 48*Q**2*s**3*s23 + 144*Q**2*s**3*t + 48*Q**2*s**2*s23**2 - 216*Q**2*s**2*s23*t + 228*Q**2*s**2*t**2 + 144*Q**2*s*s23**2*t - 216*Q**2*s*s23*t**2 + 132*Q**2*s*t**3 + 24*s**4*t - 48*s**3*s23*t + 72*s**3*t**2 + 48*s**2*s23**2*t - 120*s**2*s23*t**2 + 84*s**2*t**3 + 48*s*s23**2*t**2 - 72*s*s23*t**3 + 36*s*t**4)*np.log(Q**2*(s23 - t)**2/(t**2*(Q**2 + s - s23 + t)))/np.pi**5)/(s*t**2*(Q**2 + t)*(2*Q**2 + s + t)*(Q**2 + s - s23 + t)) + 0.0416666666666667*(Q**6*s**2 + Q**4*s**3 - Q**4*s**2*t - Q**2*s**3*t - 2*Q**2*s**2*t**2 - 2*s**3*t**2)/(np.pi**5*s**2*t**2*(Q**2 + s)*(Q**2 + t))
@jit(cache=True)
def delta(g=None,gp=None,s=None,t=None,Q=None,s23=None,mu=None,B=None,nf=None):
    return 0.111111111111111*Q**2*(s23 - t)*(4*Q**2*s23 + (s + t)**2)*(-12*EulerGamma*(0.0625*np.log(mu)/np.pi**5 - 0.03125/np.pi**5 + 0.03125*np.log(np.pi)/np.pi**5 + 0.0625*np.log(2)/np.pi**5) + 6*EulerGamma*(0.0625*np.log(mu)/np.pi**5 - 0.0625*EulerGamma/np.pi**5 - 0.03125/np.pi**5 + 0.03125*np.log(np.pi)/np.pi**5 + 0.0625*np.log(2)/np.pi**5) + (-0.375*np.log(mu)/np.pi**5 - 0.375*np.log(2)/np.pi**5 - 0.1875*np.log(np.pi)/np.pi**5 + 0.1875*EulerGamma/np.pi**5 + 0.1875/np.pi**5 + 0.0625*(-6*Q**2*s23 + 3*Q**2*(s23 - t)*np.log(t**2*(Q**2 + s - s23 + t)/(Q**2*(s23 - t)**2)) - 3*t*(s + t))/(np.pi**5*Q**2*(s23 - t)))*np.log(B) + 0.09375*np.log(B)**2/np.pi**5 + 0.375*np.log(mu)**2/np.pi**5 + 12*(-0.03125/np.pi**5 + 0.03125*np.log(np.pi)/np.pi**5 + 0.0625*np.log(2)/np.pi**5)*np.log(mu) + 0.1875*(-0.333333333333333*np.pi**2 + 2*EulerGamma**2)/np.pi**5 - 0.375*np.log(2)/np.pi**5 - 0.1875*np.log(np.pi)/np.pi**5 + 0.09375*np.log(np.pi)**2/np.pi**5 + 0.375*np.log(2)**2/np.pi**5 + 0.09375*(EulerGamma**2 + 0.166666666666667*np.pi**2)/np.pi**5 + 0.375*np.log(2)*np.log(np.pi)/np.pi**5 + 0.03125*(4*Q**2*s23 + (s + t)**2)*(2*Q**2*(6*(np.log(-2*t*(Q**2 + s - s23 + t)/(2*Q**2*s23 + s*(s23 + t) - (-s23 + t)*(-t + np.sqrt(4*Q**2*s23 + (s + t)**2)))) - 2)*np.log(2*t*(Q**2 + s - s23 + t)/((-s23 + t)*np.sqrt(4*Q**2*s23 + (s + t)**2))) + np.pi**2)*(Q**2 + s - s23 + t)/(4*Q**2*s23 + (s + t)**2) + 12*Q**2*(PolyLOG(2, (2*Q**2*s23 + s*(s23 + t) + (-s23 + t)*(t + np.sqrt(4*Q**2*s23 + (s + t)**2)))/((s23 - t)*(2*Q**2 + s + t - np.sqrt(4*Q**2*s23 + (s + t)**2)))) - PolyLOG(2, 2*t*(Q**2 + s - s23 + t)/((-s23 + t)*(2*Q**2 + s + t + np.sqrt(4*Q**2*s23 + (s + t)**2)))))*(Q**2 + s - s23 + t)/(4*Q**2*s23 + (s + t)**2) + 3*Q**2*(Q**2 + s - s23 + t)*np.log((2*Q**2 + s + t - np.sqrt(4*Q**2*s23 + (s + t)**2))/(2*Q**2 + s + t + np.sqrt(4*Q**2*s23 + (s + t)**2)))*np.log((2*Q**2 + s + t - np.sqrt(4*Q**2*s23 + (s + t)**2))*(2*Q**2 + s + t + np.sqrt(4*Q**2*s23 + (s + t)**2))**3/(4*Q**2*s23 + (s + t)**2)**2)/(4*Q**2*s23 + (s + t)**2) + (-12*Q**2*(Q**2 + s - s23 + t)*np.log(2*t*(Q**2 + s - s23 + t)/((-s23 + t)*np.sqrt(4*Q**2*s23 + (s + t)**2)))/(4*Q**2*s23 + (s + t)**2) - 3 + 3*(2*Q**2 + s + t)*(2*Q**2 + s + t + np.sqrt(4*Q**2*s23 + (s + t)**2))/(4*Q**2*s23 + (s + t)**2) - 3*(-2*Q**2*s23 - s*(s23 + t) + t*(s23 - t))/((-s23 + t)*np.sqrt(4*Q**2*s23 + (s + t)**2)))*np.log(-1 + (2*Q**2 + s + t)/np.sqrt(4*Q**2*s23 + (s + t)**2)) + 3*(4*Q**2*(Q**2 + s - s23 + t)*np.log(1 + (-2*Q**2*s23 - s*(s23 + t) + t*(s23 - t))/((-s23 + t)*np.sqrt(4*Q**2*s23 + (s + t)**2)))/(4*Q**2*s23 + (s + t)**2) - 1 + (2*Q**2 + s + t)*(2*Q**2 + s + t - np.sqrt(4*Q**2*s23 + (s + t)**2))/(4*Q**2*s23 + (s + t)**2) + (-2*Q**2*s23 - s*(s23 + t) + t*(s23 - t))/((-s23 + t)*np.sqrt(4*Q**2*s23 + (s + t)**2)))*np.log(1 + (2*Q**2 + s + t)/np.sqrt(4*Q**2*s23 + (s + t)**2)))/(np.pi**5*Q**2*(Q**2 + s - s23 + t)) - (-2*Q**2*s23 + Q**2*(s23 - t)*np.log(t**2*(Q**2 + s - s23 + t)/(Q**2*(s23 - t)**2)) - t*(s + t))*(0.375*np.log(mu)/np.pi**5 - 0.1875/np.pi**5 - 0.1875*EulerGamma/np.pi**5 + 0.1875*np.log(np.pi)/np.pi**5 + 0.375*np.log(2)/np.pi**5)/(Q**2*(s23 - t)))/(t**2*(Q**2 + 0.25*(s + t)**2/s23)*(Q**2 + s - s23 + t))
@jit(cache=True)
def plus1B(g=None,gp=None,s=None,t=None,Q=None,s23=None,mu=None,B=None,nf=None):
    return 0.166666666666667*Q**2*s23*(-s23 + t)*np.log(mu)/(np.pi**5*t**2*(Q**2 + s - s23 + t)) + 0.0833333333333333*Q**2*s23*(-s23 + t)*np.log(np.pi)/(np.pi**5*t**2*(Q**2 + s - s23 + t)) + 0.166666666666667*Q**2*s23*(-s23 + t)*np.log(2)/(np.pi**5*t**2*(Q**2 + s - s23 + t)) + 0.0833333333333333*Q**2*s23*(s23 - t)*np.log(t**2*(Q**2 + s - s23 + t)/(Q**2*(s23 - t)**2))/(np.pi**5*t**2*(Q**2 + s - s23 + t)) + 0.0833333333333333*s23*(Q**2*(s23*(-1 + EulerGamma) - t*(EulerGamma + 1)) - t*(s + t))/(np.pi**5*t**2*(Q**2 + s - s23 + t))
@jit(cache=True)
def plus2B(g=None,gp=None,s=None,t=None,Q=None,s23=None,mu=None,B=None,nf=None):
    return 0.0833333333333333*Q**2*s23*(s23 - t)/(np.pi**5*t**2*(Q**2 + s - s23 + t))
